
services:
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

  # Capturer les emails envoyés par l'application.
  mailhog:  

    # Utiliser l'image officielle de Mailhog 
    image: mailhog/mailhog  

    # Nom du conteneur pour Mailhog.
    container_name: mailhog  

    # Exposer les ports de Mailhog à l'extérieur du conteneur.
    ports:  

      # Mapper le port 8025 pour l'interface web de Mailhog (accessible via http://localhost:8025).
      - "8025:8025"  

      # Mapper le port 1025 pour le serveur SMTP utilisé pour l'envoi des emails.
      - "1025:1025"  

    # Définir des variables d'environnement pour le service Mailhog.
    environment:  

      # Spécifier le type de stockage pour Mailhog (ici, "maildir" qui permet de stocker les emails dans des fichiers).
      - MH_STORAGE=maildir  
      
volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###